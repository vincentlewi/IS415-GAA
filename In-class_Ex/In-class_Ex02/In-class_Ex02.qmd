---
title: "In-class Exercise 2"
format: 
  html:
    code-fold: true
    code-summary: "Show code"
    toc-depth: 3
author: "Alexander Vincent Lewi"
date: "15 January 2024"
execute: 
  message: false
  warning: false
---

## Getting Started

In this in-class exercise, we will use the following packages:

-   arrow
-   lubridate
-   tidyverse
-   tmap
-   sf

```{r}
#| code-summary: Load the packages
pacman::p_load(arrow, lubridate, tidyverse, tmap, sf)
```

## Importing Grab-Posisi Dataset
We will use [Grab-Posisi](https://engineering.grab.com/grab-posisi) dataset. This dataset contains the GPS trajectories of Grab drivers in Singapore.
```{r}
#| code-summary: Read the dataset
#| eval: false
df <- read_parquet("data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet")
```

However, when we explore the dataset, we notice that the timestamp variable is in a integer format. We need to convert it into a datetime format.
```{r}
#| code-summary: Convert the timestamp into datetime
#| eval: false
df$pingtimestamp <- as_datetime(df$pingtimestamp)
```

```{r}
#| code-summary: Save the dataset into RDS format
#| echo: false
write_rds(df, "data/rds/part0.rds")
```

### Extracting trip starting location
Now, we will retrieve the starting location of each trip. We are also interested to know the day of the week and the hour of the day when the trip started.
```{r}
#| eval: false
origin_df <- df |>
  group_by(trj_id) |> # Group by trip ID
  arrange(pingtimestamp) |> # Sort by timestamp
  filter(row_number() == 1) |> # Get the earliest timestamp
  mutate(weekday = wday(pingtimestamp,
                        label = TRUE,
                        abbr = TRUE),
         start_hr = hour(pingtimestamp),
         day = factor(mday(pingtimestamp)))
```

### Extracting trip ending location
Similarly, we will also extract the ending location of the trip.
```{r}
#| eval: false
destination_df <- df |>
  group_by(trj_id) |> # Group by trip ID
  arrange(desc(pingtimestamp)) |> # Sort by timestamp in descending order
  filter(row_number() == 1) |> # Get the last timestamp
  mutate(weekday = wday(pingtimestamp,
                        label = TRUE,
                        abbr = TRUE),
         end_hr = hour(pingtimestamp),
         day = factor(mday(pingtimestamp)))
```

```{r}
#| code-summary: Save the dataset into RDS format
#| eval: false
#| echo: false
write_rds(df, "data/rds/origin_df.rds")
write_rds(df, "data/rds/destination_df.rds")
```

```{r}
#| echo: false
origin_df <- read_rds("data/rds/origin_df.rds")
destination_df <- read_rds("data/rds/destination_df.rds")
```
