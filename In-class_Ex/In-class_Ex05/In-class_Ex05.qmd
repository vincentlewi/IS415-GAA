---
title: "In-class Exercise 5: Global and Local Measures of Sptatial Autocorrelation - sfdep method"
format: 
  html:
    toc-depth: 3
    code-overflow: "scroll"
author: "Alexander Vincent Lewi"
date: "5 February 2024"
execute: 
  message: false
  warning: false
---

## Load Packages

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse)
```

## The Data

```{r}
hunan <- st_read(dsn = 'data/geospatial', layer = 'Hunan') 
hunan2012 <- read_csv('data/aspatial/Hunan_2012.csv')
hunan_GDPPC <- left_join(hunan, hunan2012) %>% select(1:4, 7, 15)
```

```{r}
tmap_mode("plot")
tm_shape(hunan_GDPPC) +
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC") +
  tm_layout(main.title = "Distribution of GDP per capita by county, Hunan Province",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha = 0.2)

```

## Deriving Contiguity Weights: Queen's method

The code below combines the computing contiguity matrix and row-standarized weight matrix in hands-on exercise 5.

```{r}
wm_q <- hunan_GDPPC |>
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb, style = "W"),
         .before = 1) # puts it before column number 1
```

## Computing Moran's I

```{r}
moranI <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)
glimpse(moranI)
```

However, the code above is unnecessary since it wont give you any p-value.

```{r}
global_moran_test(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt)
```

In practice, Monte Carlo simulation should be used to perform the statistical test. For sfdep, it is supported by `global_moran_perm()`. It is also a good practice to use `set.seed()` to make our simulations reproducible.

```{r}
set.seed(42)
global_moran_perm(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt,
                  nsim = 999)
```
